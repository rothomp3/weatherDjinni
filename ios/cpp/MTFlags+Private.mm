// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from weather.idl

#import "MTFlags+Private.h"
#import "DJIMarshal+Private.h"
#include <cassert>

namespace djinni_generated {

auto Flags::toCpp(ObjcType obj) -> CppType
{
    assert(obj);
    return {::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.darkskyUnavailable),
            ::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::toCpp(obj.darkskyStations),
            ::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::toCpp(obj.datapointStations),
            ::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::toCpp(obj.isdStations),
            ::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::toCpp(obj.lampStations),
            ::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::toCpp(obj.metarStations),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.metnoLicense),
            ::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::toCpp(obj.sources),
            ::djinni::Optional<std::experimental::optional, ::djinni::String>::toCpp(obj.units)};
}

auto Flags::fromCpp(const CppType& cpp) -> ObjcType
{
    return [[MTFlags alloc] initWithDarkskyUnavailable:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.darksky_unavailable))
                                       darkskyStations:(::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::fromCpp(cpp.darksky_stations))
                                     datapointStations:(::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::fromCpp(cpp.datapoint_stations))
                                           isdStations:(::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::fromCpp(cpp.isd_stations))
                                          lampStations:(::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::fromCpp(cpp.lamp_stations))
                                         metarStations:(::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::fromCpp(cpp.metar_stations))
                                          metnoLicense:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.metno_license))
                                               sources:(::djinni::Optional<std::experimental::optional, ::djinni::List<::djinni::String>>::fromCpp(cpp.sources))
                                                 units:(::djinni::Optional<std::experimental::optional, ::djinni::String>::fromCpp(cpp.units))];
}

}  // namespace djinni_generated
